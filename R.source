library(calibrate)

plot_lendis2 <- function (input,gt) {

L=read.delim(input,header=F);
#L$V2=L$V2/nf;
#L$V3=L$V3/nf;
ylim_plus=max(L$V2)*1.2;ylim_minus=-max(L$V3)*1.2;
#m=basename(input)
name=paste(input,'.pdf',sep="");
pdf(name);
barplot(L$V2,main=gt,col=4,ylab='number of normalized reads(ppm)',ylim=c(ylim_minus,ylim_plus));
barplot(-L$V3,names.arg=L$V1,col=2,xlab='length (nt)',ylim=c(ylim_minus,ylim_plus),add=TRUE);
dev.off();

name=paste(input,'.ps',sep="");
pdf(name);
barplot(L$V2,main=gt,col=4,ylab='number of normalized reads(ppm)',ylim=c(ylim_minus,ylim_plus));
barplot(-L$V3,names.arg=L$V1,col=2,xlab='length (nt)',ylim=c(ylim_minus,ylim_plus),add=TRUE);
dev.off();


}


plot_paired_lendis2<- function (input,outdir) {

L=read.table(input,header=F)
colnames(L)=c("gt","len","sense","antisense","rank")
L=L[order(L$rank,L$gt,L$len),]
L$rank=as.factor(L$rank)
m1=basename(input)
ylim_plus=max(L$sense,L$antisense)*1.2;ylim_minus=-ylim_plus;
n=length(levels(L$gt))

h=7
w=h*n
pdfname=paste(outdir,"/",m1,'.pdf',sep="");
pdf (pdfname,width=w,height=h)
#layout(matrix(c(1:n), n, 1, byrow = FALSE))
par(mfcol = c(1, n))

for ( i in 1:length(levels(as.factor(L$rank))) )
{
r=levels(L$rank)[i]
df=as.data.frame(lapply(subset(L,as.character(rank)==r),'[',drop=TRUE))
gtname=levels( as.factor(df$gt) )[1]  #a long trip to get the gtname

Lgtx=as.data.frame(lapply(subset(L,gt==gtname),'[',drop=TRUE))
barplot(Lgtx$sense,main=gtname,col=4,ylab='number of normalized reads(ppm)',ylim=c(ylim_minus,ylim_plus));
barplot(-Lgtx$antisense,names.arg=Lgtx$len,col=2,xlab='length (nt)',ylim=c(ylim_minus,ylim_plus),add=TRUE);
}
dev.off();


name=paste(outdir,"/",m1,'.ps',sep="");
pdf (pdfname,width=w,height=h)
#layout(matrix(c(1:n), n, 1, byrow = TRUE))
par(mfcol = c(1, n))
for ( i in 1:length(levels(as.factor(L$rank))) )
{
r=levels(L$rank)[i]
df=as.data.frame(lapply(subset(L,as.character(rank)==r),'[',drop=TRUE))
gtname=levels( as.factor(df$gt) )[1]  #a long trip to get the gtname

Lgtx=as.data.frame(lapply(subset(L,gt==gtname),'[',drop=TRUE))
barplot(Lgtx$sense,main=gtname,col=4,ylab='number of normalized reads(ppm)',ylim=c(ylim_minus,ylim_plus));
barplot(-Lgtx$antisense,names.arg=Lgtx$len,col=2,xlab='length (nt)',ylim=c(ylim_minus,ylim_plus),add=TRUE);
}
dev.off();

}



plot_transposon_abundance_zscore_barplot <- function (tlist,plist,z,nftype,nf,outdir) {
a=read.table(tlist,T)

group=read.table("/home/wangw1/pipeline/common/Zamore.group")
colnames(group)=c("transposon","g")

aGroup=merge(a,group,by.x="transposon",all.x=TRUE)
aGroup$g[is.na(aGroup$g)]=4
aGroup$piRNA=aGroup$piRNA/nf*1000000
aGroupppm=subset(aGroup,select=c("transposon","piRNA","g"))


pp=read.table(plist,F)
colnames(pp)=c("transposon","gt","zscore","ppscore10")

pingponggt=levels(as.factor(pp$gt))[1]
name = strsplit(pingponggt, '\\-')[[1]][1]

aGroupppmpp=merge(aGroupppm,pp,by="transposon")

pdfname=paste(outdir,"/", name,"_trn_abundance_vs_zscore.",nftype,".pdf",sep='')
pdf (pdfname,width=25,height=12)
aGroupppmpp=aGroupppmpp[order(aGroupppmpp$piRNA),]
trn=aGroupppmpp$transposon
aGroupppmpp$transposon=sub('FBgn[0-9n]+\\_','',aGroupppmpp$transposon,perl=TRUE)
aGroupppmpp$transposon=sub("FBgnnnnnnnn_","",aGroupppmpp$transposon,perl=TRUE) 
par(mar = c(13, 4, 4, 6) + 0.1)
m=paste("Ping-Pong Z score for each transposon family in", name,"\n","Ping-Pong Z score for all transposon piRNAs is", format(z,digits=2), sep=' ')
aGroupppmpp$g=as.factor(aGroupppmpp$g)
fcol=c("black","green","red","yellow")

barplot(aGroupppmpp$zscore,border="lightgrey",col=fcol[aGroupppmpp$g],  axes=F,names=aGroupppmpp$transposon, las=2,ylab="Z score")
legend(x=1,y=70,legend=c("group1","group2","group3","not in group"),pch=15,col=c("black","green","red","yellow"))

axis(2, at=seq(-10,max(aGroupppmpp$pp6),by=10),las=2)
axis(2, at=1.96, labels="z=1.96",las=2)
abline(h=1.96,col="red",lty=2)

par(new=T)

barplot(aGroupppmpp$piRNA,col="lightgrey",axes=F,xlab="",ylab="", main=m,ylim=c(0,max(aGroupppmpp$piRNA)),col.lab="blue")
axis(4, ylim=c(0,max(aGroupppmpp$piRNA)),las=2)
mtext(4,text="ppm",line=4)
axis(4, at=500, labels="ppm=500",las=2,col="blue")
abline(h=500,col="blue",lty=2)

dev.off()

}
